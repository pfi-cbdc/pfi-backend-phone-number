name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/github-action
        chmod 600 ~/.ssh/github-action
        echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts
    
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        PORT: ${{ secrets.PORT }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        VERIFY_SERVICE_SID: ${{ secrets.VERIFY_SERVICE_SID }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        ssh -i ~/.ssh/github-action ubuntu@$EC2_HOST "
          echo \"PORT=${PORT}\" > ~/pfi-backend/.env
          echo \"JWT_SECRET=${JWT_SECRET}\" >> ~/pfi-backend/.env
          echo \"TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}\" >> ~/pfi-backend/.env
          echo \"TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}\" >> ~/pfi-backend/.env
          echo \"VERIFY_SERVICE_SID=${VERIFY_SERVICE_SID}\" >> ~/pfi-backend/.env
          echo \"DATABASE_URL=${DATABASE_URL}\" >> ~/pfi-backend/.env
        "
        
        ssh -i ~/.ssh/github-action ubuntu@$EC2_HOST '
          set -e
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            sudo usermod -aG docker $USER
          fi

          # Install Docker Compose if not present
          if ! command -v docker-compose &> /dev/null; then
            echo "Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "Checking repository path"
          cd /home/ubuntu
          if [ ! -d "pfi-backend/.git" ]; then
            echo "Initializing git repository"
            rm -rf pfi-backend
            git clone https://github.com/pfi-cbdc/pfi-backend-phone-number.git pfi-backend
          fi
          cd pfi-backend
          echo "Updating repository"
          git fetch origin main
          git reset --hard origin/main
          echo "Installing dependencies"
          npm install
          echo "Rebuilding and restarting Docker containers"
          sudo docker-compose down
          sudo docker-compose build --no-cache  # Force rebuild the container
          sudo docker-compose up -d
        '